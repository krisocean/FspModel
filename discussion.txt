Discussion
After modelling my Java implementation in FSP, then I try to use LTSA to analysis the behaviour of the system. When I check safety and progress of my model, I found there is a deadlock in my solution 1, while solution 2 is free of deadlock. And the problem of solution 1 also present in my java representation. And when I run my Java code for solution 1 in Eclipse, the deadlock would not occur immediately. If I change the inspecting time of the inspector to shorter, finding the deadlock becomes harder. Sometimes the system could work fine for a long time. Therefore, when I submit Java code for my solution 2, Iâ€™m not very convince that it is free of problems. Because what I see is the system seams running smoothly during some time, but it is possible that the system could be stop if there are some unknown interferences or problems occur latter. It is very convenient to trace the deadlock of my solution 1 by using the LTSA. Moreover, the shortest path leading to a deadlock will show up, which is really convincing. Using LTSA seams to be a wise way to analyse a complicated system, we could find potential deadlock immediately and check the liveness properties of the system. When I use LTSA to analyse the behaviour of the system using solution 2, it shows that there is free from deadlock and errors, and the model does not violation the liveness property. Now, I believe there is no problem in my solution two.